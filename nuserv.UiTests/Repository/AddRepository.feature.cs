// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34011
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace nuserv.UiTests.Repository
{
    using TechTalk.SpecFlow;
    using Autofac;
    using Autofac.Configuration;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AddRepository")]
    public partial class AddRepositoryFeature
    {
        
        private OpenQA.Selenium.IWebDriver driver;
        
        private IContainer container;
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddRepository.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            var builder = new ContainerBuilder();
            builder.RegisterModule(new ConfigurationSettingsReader());
            this.container = builder.Build();
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AddRepository", "In order to add a repository\r\nAs a user\r\nI want to be able to fill out a simple f" +
                    "orm with validation.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
            try { System.Threading.Thread.Sleep(50); this.driver.Quit(); } catch (System.Exception) {}
            this.driver = null;
            ScenarioContext.Current.Remove("Driver");
            ScenarioContext.Current.Remove("Container");
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            if(this.driver != null)
                ScenarioContext.Current.Add("Driver", this.driver);
            if(this.container != null)
                ScenarioContext.Current.Add("Container", this.container);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        private void InitializeSelenium(string browser)
        {
            this.driver = this.container.ResolveNamed<OpenQA.Selenium.IWebDriver>(browser);
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Successfully add a repository")]
        [NUnit.Framework.TestCaseAttribute("AGrade", Category="AGrade", TestName="SuccessfullyAddARepository on AGrade")]
        public virtual void SuccessfullyAddARepository(string browser)
        {
            InitializeSelenium(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Successfully add a repository", new string[] {
                        "Browser:AGrade"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I navigated to /repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Description"});
            table1.AddRow(new string[] {
                        "new repository{0}",
                        "New repository Description"});
#line 9
 testRunner.And("I have entered the following information:", ((string)(null)), table1, "And ");
#line 12
 testRunner.When("I press Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "ApiUrl",
                        "FeedUrl",
                        "Description"});
            table2.AddRow(new string[] {
                        "new repository{0}",
                        "repository/new-repository{0}",
                        "repository/new-repository{0}/api/v2",
                        "New repository Description"});
#line 13
 testRunner.Then("I should see the following repository:", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a repository without data")]
        [NUnit.Framework.TestCaseAttribute("AGrade", Category="AGrade", TestName="AddARepositoryWithoutData on AGrade")]
        public virtual void AddARepositoryWithoutData(string browser)
        {
            InitializeSelenium(browser);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a repository without data", new string[] {
                        "Browser:AGrade"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("I navigated to /repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.When("I press Save", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("I should see the error \"Name is to short\" on name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.And("I should see the error \"Description is to short\" on description", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Automatic url generation")]
        [NUnit.Framework.TestCaseAttribute("AGrade", "New Rep0sitory", "new-rep0sitory", null, Category="AGrade", TestName="AutomaticUrlGeneration on AGrade with: \"New Rep0sitory\" ,\"new-rep0sitory\"")]
        [NUnit.Framework.TestCaseAttribute("AGrade", "group/name", "group-name", null, Category="AGrade", TestName="AutomaticUrlGeneration on AGrade with: \"group/name\" ,\"group-name\"")]
        [NUnit.Framework.TestCaseAttribute("AGrade", "group\\Came", "group-came", null, Category="AGrade", TestName="AutomaticUrlGeneration on AGrade with: \"group\\Came\" ,\"group-came\"")]
        public virtual void AutomaticUrlGeneration(string browser, string title, string expectedUrl, string[] exampleTags)
        {
            InitializeSelenium(browser);
            string[] @__tags = new string[] {
                    "Browser:AGrade"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Automatic url generation", @__tags);
#line 25
this.ScenarioSetup(scenarioInfo);
#line 26
 testRunner.Given("I navigated to /repository", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Title",
                        "Description"});
            table3.AddRow(new string[] {
                        string.Format("{0}", title),
                        ""});
#line 27
 testRunner.And("I have entered the following information:", ((string)(null)), table3, "And ");
#line 30
 testRunner.Then(string.Format("I should see the url \"{0}\"", expectedUrl), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
